@model ELearning.Models.Paymentinfo

@{
    ViewBag.Title = "Pay to Continue";
}

<h2>Pay Direct With Card</h2>


@using (Html.BeginForm("PaymentWithCreditCard", "PayWithCard", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            <label class="control-label col-md-2">Course</label>            
            <div class="col-md-10">
                <label class="control-label ">@ViewBag.courseInfo.Name</label>                
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Total Price</label>
            <div class="col-md-10">
                <label class="control-label ">$@ViewBag.courseInfo.Price</label>
            </div>
        </div>
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cardtype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="min-height:10px">
                @Html.DropDownListFor(model => model.cardtype, new List<SelectListItem>
                { new SelectListItem{Text="VISA", Value="visa",Selected=true},
                new SelectListItem{Text="MASTER", Value="mastercard" },
                new SelectListItem{Text="AMEX", Value="amex" }})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cardnumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cardnumber, new
           {
               htmlAttributes =
               new { @class = "form-control", @type = "number", @min = "0", @max = "9999999999999999" }
           })
                @Html.ValidationMessageFor(model => model.cardnumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.month, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.month, new
           {
               htmlAttributes =
               new { @class = "form-control", @type = "number", @min = "01" }
           })
                @Html.ValidationMessageFor(model => model.month, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.year, new
           {
               htmlAttributes =
               new { @class = "form-control", @type = "number", @min = "01" }
           })
                @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cvv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cvv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cvv, "", new { @class = "text-danger" })
            </div>
        </div>
       
        @Html.HiddenFor(model => model.CourseID);
        @Html.HiddenFor(model => model.ItemPrice);
        @Html.HiddenFor(model => model.ItemName);
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Pay with Credit Card" class="btn btn-default" />
            </div>
        </div>
        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Pay with Credit Card" formaction="@Url.Action("PaymentWithCreditCard","PayWithCard")" class="btn btn-default" />
            </div>
        </div>*@
    </div>
}